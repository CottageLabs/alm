The Rake Tasks

As I said, I've written several rake tasks in the course of development: they're all in lib/tasks/*.rake where they'll be found automatically:

in db_update.rake:
  rake db:update [SOURCE=name] [LIMIT=0] [LAZY=1] [VERBOSE=0] [RAISE_ON_ERROR=0]
    Update articles from sources. Options:
    LIMIT=n -- if specified and non-zero, will only update this many articles (the default, 0, means "do all")
    LAZY=0 -- if specified, will update non-stale sources
    SOURCE=name -- if specified, will only update from this source
    VERBOSE=1 -- noiser than usual
    RAISE_ON_ERROR=1 -- stop on first failure

  rake db:update:stale
    Same as db:update -- probably what you want if you just want to make sure things are current.

  rake db:update:all
    A shortcut for specifying LAZY=0 LIMIT=0 -- probably what you want if you don't trust existing stuff (or you've just changed the schema)

  rake db:update:cited
    Updates only articles that already have citations -- this was useful in development when I primarily wanted to test updates that would actually get me stuff.

  rake db:update:one DOI=10.1371/foo
    Updates a given article (which must already exist), non-lazily.

  rake db:update:reset
    Mark all articles as stale

  rake db:update:reset_all
    Actually discard all retrievals from all sources, and mark all articles as stale

in db_fetch.rake:
  rake db:fetch
    Drop and recreate the current database, dump the production database data (via ssh) and imports it locally. It then runs "migrate" and "db:test:clone" to make sure everything's up to date locally. (You'll need to change the ssh statement - it's got my server's name in it.)

in doi_import.rake:
  rake doi_import <DOI_DUMP
    Bulk-load a file consisting of DOIs, one per line. it'll ignore (but count) invalid ones and those that already exist in the database.
    
    Format for import file:
    DOI Date(YYYY-MM-DD) Volume Issue Title
    
    doi_import splits on white space for the first 4 elements, and then takes the rest of the line (title) as one element including any whitespace in the title.
    
in fake_update.rake:
  rake db:update:fake [DOI=10.1371/whatever]
    Generate fake historical retrievals for a DOI, which probably shouldn't be a real one -- for development.

in source_config.rake:
  rake db:source_config
    Dump the configuration parameters for all configured sources. This is how I generated the dump in the separate email I sent you.

in wsdl_scopus.rake:
  rake wsdl:scopus
    Re-generate the Ruby code that handles Scopus; these files are then checked into subversion like the rest of the code. You'll need to do this again if Scopus changes their API...

Create an admin user:

$ RAILS_ENV=development script/console

In that console, do:
 >> u = User.create(:login => "admin", :email => "admin@plos.org", :password => "booty", :password_confirmation => "booty")

Then, if you do
 >> User.all
it'll show you that user object (or "[]" if the user didn't get created).
