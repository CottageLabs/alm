<%= 
  require 'ruby-debug'
  # Broken out by month for one source
  months = month_range(Date.today, Date.civil((params[:year] || 2009).to_i, 
                                              (params[:month] || 1).to_i, 1))
  this_month = Date.today.at_beginning_of_month
  month_count = months.count
  empty_row = Array.new(month_count, 0)
  FasterCSV.generate do |csv|
    csv << ["DOI", "Published", "Title"] + months.map {|date| "#{date.month}/#{date.year}" }
    @articles.each do |article|
      retrieval = article.retrievals.detect {|r| r.source_id == @source.id }
      month_totals = if retrieval.nil? 
        empty_row
      else
        months.map do |month_date|
          if month_date == this_month
            # special-case current month: use most-recent total, in case we haven't updated this month yet.
            retrieval.total_citations_count
          else
            history = retrieval.histories.detect {|h| h.year == month_date.year && h.month == month_date.month }
            (history && history.citations_count) || 0
          end
        end
      end
      csv << [article.doi, article.published_on, article.title.to_s.strip_tags] + month_totals
    end
  end
-%>
